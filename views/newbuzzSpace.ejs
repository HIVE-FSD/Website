<form class="newbuzzSpaces-container" enctype="multipart/form-data" autocomplete="off" >
    <div class="buzzSpace-cover-group" onclick="clickinput(this)">
        <span class="material-symbols-outlined">
            upload
        </span>
        <canvas id="CoverCan" class="cover-input-show"></canvas>
        <input type="file" multiple="false" accept="image/*" name="cover" class="file-input"
            onchange="uploadCover(this)">
    </div>
    <div class="buzzSpace-logo-group" onclick="clickinput(this)">
        <span class="material-symbols-outlined">
            upload
        </span>
        <canvas id="LogoCan" class="logo-input-show"></canvas>
        <input type="file" multiple="false" accept="image/*" name="logo" class="file-input" onchange="uploadLogo(this)">
    </div>
    <input type="text" name="buzzSpaceName" placeholder="Enter the name of your BuzzSpace">
    <input type="text" name="buzzSpaceTag"
        placeholder="What Category does your BuzzSpace fall into? ex:sports, study etc..">
    <textarea name="description" cols="30" rows="5" placeholder="About yor BuzzSpace"></textarea>

    <div class="rules-input-main">
        <h1>Rules :</h1>
        <div class="rules-container">
            <div class="rule-input-group">
                <input type="text" name="rule" placeholder="Enter a rule" required >
            </div>
        </div>

        <button type="button" onclick="addRuleInput(this)">Add Rule</button>
    </div>

    <button type="button" onclick="submitForm()">Submit</button>
</form>

<script src="https://www.dukelearntoprogram.com/course1/common/js/image/SimpleImage.js"></script>
<script>
    function uploadCover(fileinput) {
        var imgcanvas = document.getElementById("CoverCan");
        var image = new SimpleImage(fileinput);
        image.drawTo(imgcanvas);
    }

    function uploadLogo(fileinput) {
        var imgcanvas = document.getElementById("LogoCan");
        var image = new SimpleImage(fileinput);
        image.drawTo(imgcanvas);
    }

    function addRuleInput(btn) {
        const rulesContainerMain = btn.closest('.rules-input-main');
        const rulesContainer = rulesContainerMain.querySelector('.rules-container');
        const newInputGroup = document.createElement('div');
        newInputGroup.classList.add('rule-input-group');
        newInputGroup.innerHTML = `
            <input type="text" name="rule" placeholder="Enter a rule">
            <button type="button" onclick="removeRuleInput(this)">
                <span class="material-symbols-outlined">
                remove
                </span>
            </button>
        `;
        rulesContainer.appendChild(newInputGroup);
    }

    function removeRuleInput(button) {
        button.parentNode.remove();
    }

    function clickinput(can) {
        const input = can.querySelector('.file-input');
        input.click();
    }

    function submitForm() {
        const form = document.querySelector('.newbuzzSpaces-container');
        const formData = new FormData(form);
    
        // Get all the rule inputs
        const ruleInputs = document.querySelectorAll('.rule-input-group input[name="rule"]');
        const rulesArray = [];
    
        // Iterate through each rule input and add its value to the rules array
        ruleInputs.forEach(input => {
            if (input.value.trim() !== '') {
                rulesArray.push(input.value.trim());
            }
        });
    
        // Append the rules array to the form data
        formData.append('rules', JSON.stringify(rulesArray));
    
        // Assuming you have access to the user's ID in a variable called userId
        const userId = '<%= user._id %>';
    
        // Append the user's ID to the form data
        formData.append('creator', userId);

    
        fetch('/buzzspace/createBuzzSpace', {
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                if (response.status === 201) {
                    return response.json();
                }
                return response.text();
            })
            .then(data => {
                if (data.redirect) {
                    window.location.href = data.redirect;
                } else {
                    console.log(data);
                }
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
    }
    
</script>